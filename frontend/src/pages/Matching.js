// src/pages/Matching.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import React, { useState, useEffect } from 'react';
import { useAuth } from '../context/AuthContext';
import { matchingAPI } from '../services/api';
import UserCard from '../components/matching/UserCard';
import Filters from '../components/matching/Filters';
import MutualLikes from '../components/matching/MutualLikes';
import { useNavigate } from 'react-router-dom';
import './Matching.css';

const Matching = () => {
  const navigate = useNavigate();
  const { user } = useAuth();
  const [recommendations, setRecommendations] = useState([]);
  const [subjects, setSubjects] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [filters, setFilters] = useState({
    faculty: '',
    year: '',
    subject_id: ''
  });

  useEffect(() => {
    loadSubjects();
  }, []);

  useEffect(() => {
    if (user) {
      loadRecommendations();
    }
  }, [filters, user]);

  const loadSubjects = async () => {
    try {
      console.log('üìö –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
      const response = await matchingAPI.getSubjects();
      console.log('‚úÖ –ü—Ä–µ–¥–º–µ—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', response.data);
      setSubjects(response.data);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:', error);
    }
  };

  const loadRecommendations = async () => {
    try {
      setLoading(true);
      setError('');
      console.log('üîç –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', filters);

      const response = await matchingAPI.getRecommendations(filters);
      console.log('‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', response.data);
      setRecommendations(response.data);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', error);

      // Fallback –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      try {
        console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...');
        const testResponse = await matchingAPI.getTestRecommendations();
        setRecommendations(testResponse.data);
        setError('–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
      } catch (testError) {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏');
        setRecommendations([]);
      }
    } finally {
      setLoading(false);
    }
  };

  const handleStartChat = (chatRoom) => {
    navigate('/chat', { state: { selectedChat: chatRoom } });
  };

  const handleFilterChange = (e) => {
    if (e.target.name === 'reset') {
      setFilters({
        faculty: '',
        year: '',
        subject_id: ''
      });
    } else {
      setFilters(prev => ({
        ...prev,
        [e.target.name]: e.target.value
      }));
    }
  };

  const handleSwipe = async (userId, action) => {
    try {
      console.log(`üîÑ –°–≤–∞–π–ø: ${action} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
      await matchingAPI.swipe(userId, action);

      // –£–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞
      setRecommendations(prev => prev.filter(user => user.id !== userId));

      console.log(`‚úÖ ${action === 'like' ? '–õ–∞–π–∫' : '–ü–∞—Å'} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω`);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–≤–∞–π–ø–∞:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–µ–π—Å—Ç–≤–∏—è');
    }
  };

  if (!user) {
    return (
      <div className="matching-page">
        <div className="auth-required">
          <h2>–î–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
          <button onClick={() => navigate('/login')} className="login-btn">
            –í–æ–π—Ç–∏
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="matching-page">
      <div className="matching-header">
        <h1>üéØ –ù–∞–π–¥–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è</h1>
        <p>–°–≤–∞–π–ø–∞–π –≤–ø—Ä–∞–≤–æ üëç —á—Ç–æ–±—ã –ª–∞–π–∫–Ω—É—Ç—å, –≤–ª–µ–≤–æ üëé —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å</p>
      </div>

      <Filters
        filters={filters}
        onFilterChange={handleFilterChange}
        subjects={subjects}
      />

      {error && (
        <div className="error-message">
          {error}
          <button onClick={loadRecommendations} style={{marginLeft: '10px'}}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      )}

      {loading ? (
        <div className="loading">
          <div className="spinner"></div>
          <p>–ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤...</p>
        </div>
      ) : (
        <div className="matching-container">
          {recommendations.length === 0 ? (
            <div className="no-users">
              <div className="no-users-icon">üîç</div>
              <h2>–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</h2>
              <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª—å</p>
              <div className="no-users-actions">
                <button onClick={loadRecommendations}>–û–±–Ω–æ–≤–∏—Ç—å</button>
                <button onClick={() => navigate('/profile')}>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã</button>
              </div>
            </div>
          ) : (
            <div className="cards-stack">
              {recommendations.slice(0, 3).map((user, index) => (
                <UserCard
                  key={user.id}
                  user={user}
                  onSwipe={handleSwipe}
                  currentIndex={index}
                  totalCards={recommendations.length}
                  style={{
                    zIndex: recommendations.length - index,
                    transform: `scale(${1 - index * 0.08}) translateY(${index * 15}px)`,
                    opacity: 1 - index * 0.2
                  }}
                />
              ))}
            </div>
          )}
        </div>
      )}

      <MutualLikes onStartChat={handleStartChat} />
    </div>
  );
};

export default Matching;