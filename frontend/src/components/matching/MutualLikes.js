// src/components/matching/MutualLikes.js
import React, { useState, useEffect } from 'react';
import { matchingAPI, chatAPI, studySessionsAPI } from '../../services/api'; // –î–æ–±–∞–≤–ª–µ–Ω studySessionsAPI
import './MutualLikes.css';

const MutualLikes = ({ onStartChat }) => {
  const [mutualLikes, setMutualLikes] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  const loadMutualLikes = async () => {
    try {
      setLoading(true);
      const response = await matchingAPI.getMutualLikes();
      setMutualLikes(response.data);
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤');
      console.error('Error loading mutual likes:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleSendInvitation = async (user) => {
    try {
      // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
      const sessionData = {
        title: `–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Å–µ—Å—Å–∏—è —Å ${user.first_name || user.username}`,
        description: `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —É—á–µ–±–Ω—É—é —Å–µ—Å—Å–∏—é –æ—Ç ${user.first_name || user.username}`,
        subject_name: '–°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
        scheduled_time: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(), // –ó–∞–≤—Ç—Ä–∞
        duration_minutes: 60,
        max_participants: 2
      };

      const sessionResponse = await studySessionsAPI.createSession(sessionData);
      const session = sessionResponse.data;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
      await studySessionsAPI.sendInvitation(session.id, user.id);

      alert(`–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.first_name || user.username}!`);

    } catch (error) {
      console.error('Error sending invitation:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
    }
  };

  const handleStartChat = async (user) => {
    try {
      // –°–æ–∑–¥–∞–µ–º —á–∞—Ç-–∫–æ–º–Ω–∞—Ç—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      const response = await chatAPI.createChatRoom(user.id);
      const chatRoom = response.data;

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      if (onStartChat) {
        onStartChat(chatRoom);
      }
    } catch (error) {
      console.error('Error starting chat:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞—Ç–∞');
    }
  };

  useEffect(() => {
    loadMutualLikes();
  }, []);

  if (loading) {
    return (
      <div className="mutual-likes-loading">
        <div className="spinner"></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="mutual-likes-error">
        <p>{error}</p>
        <button onClick={loadMutualLikes}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
      </div>
    );
  }

  return (
    <div className="mutual-likes-container">
      <h3>–í–∑–∞–∏–º–Ω—ã–µ –ª–∞–π–∫–∏ üíï</h3>
      <p className="mutual-likes-subtitle">
        –≠—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ç–æ–∂–µ –≤–∞—Å –ª–∞–π–∫–Ω—É–ª–∏! –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —É—á–µ–±–Ω—É—é —Å–µ—Å—Å–∏—é.
      </p>

      {mutualLikes.length === 0 ? (
        <div className="no-mutual-likes">
          <p>–ü–æ–∫–∞ –Ω–µ—Ç –≤–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤</p>
          <small>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–≤–∞–π–ø–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ matches!</small>
        </div>
      ) : (
        <div className="mutual-likes-grid">
          {mutualLikes.map((item) => (
            <div key={item.swipe_id} className="mutual-like-card">
              <div className="mutual-like-header">
                <div className="mutual-like-avatar">
                  {item.user.first_name?.charAt(0) || item.user.username?.charAt(0) || 'U'}
                </div>
                <div className="mutual-like-info">
                  <h4>
                    {item.user.first_name && item.user.last_name
                      ? `${item.user.first_name} ${item.user.last_name}`
                      : item.user.username
                    }
                  </h4>
                  <p className="mutual-like-username">@{item.user.username}</p>
                  <p className="mutual-like-faculty">{item.user.faculty}</p>
                </div>
              </div>

              <div className="mutual-like-actions">
                <button
                  className="btn-chat"
                  onClick={() => handleStartChat(item.user)}
                >
                  üí¨ –ù–∞—á–∞—Ç—å —á–∞—Ç
                </button>
                <button
                  className="btn-invite"
                  onClick={() => handleSendInvitation(item.user)}
                >
                  üì® –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–µ—Å—Å–∏—é
                </button>
              </div>

              <div className="mutual-like-meta">
                <span>–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {new Date(item.matched_at).toLocaleDateString()}</span>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default MutualLikes;